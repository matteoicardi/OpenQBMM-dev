/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

w       0.25;
W       1.0;
x1      0.25;
x2      0.75;
h       1.0;
halfDepth   0.5;
depth   1.0;

cellSize    0.025;

nwPts       #calc "round($w/$cellSize)";
nWPts       #calc "round(($W - 2*$w)/$cellSize)";

nhPts       #calc "round($h/$cellSize)";
nDepthPts   #calc "round($halfDepth/$cellSize)";

vertices
(
    (   0    0      0           )   //0
    (   $x1  0      0           )   //1
    (   $x2  0      0           )   //2
    (   $W   0      0           )   //3
    (   $W   $h     0           )   //4
    (   $x2  $h     0           )   //5
    (   $x1  $h     0           )   //6
    (   0    $h     0           )   //7
    (   0    0      $halfDepth  )   //8
    (   $x1  0      $halfDepth  )   //9
    (   $x2  0      $halfDepth  )   //10
    (   $W   0      $halfDepth  )   //11
    (   $W   $h     $halfDepth  )   //12
    (   $x2  $h     $halfDepth  )   //13
    (   $x1  $h     $halfDepth  )   //14
    (   0    $h     $halfDepth  )   //15
    (   0    0      $depth      )   //16
    (   $x1  0      $depth      )   //17
    (   $x2  0      $depth      )   //18
    (   $W   0      $depth      )   //19
    (   $W   $h     $depth      )   //20
    (   $x2  $h     $depth      )   //21
    (   $x1  $h     $depth      )   //22
    (   0    $h     $depth      )   //23
);

blocks
(
    hex (0 1 6 7 8 9 14 15) ($nwPts $nhPts $nDepthPts) simpleGrading (1 1 1)
    hex (1 2 5 6 9 10 13 14) ($nWPts $nhPts $nDepthPts) simpleGrading (1 1 1)
    hex (2 3 4 5 10 11 12 13) ($nwPts $nhPts $nDepthPts) simpleGrading (1 1 1)
    hex (8 9 14 15 16 17 22 23) ($nwPts $nhPts $nDepthPts) simpleGrading (1 1 1)
    hex (9 10 13 14 17 18 21 22) ($nWPts $nhPts $nDepthPts) simpleGrading (1 1 1)
    hex (10 11 12 13 18 19 20 21) ($nwPts $nhPts $nDepthPts) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet1
    {
        type            patch;
        faces
        (
            (0 1 9 8)
        );
    }
    inlet2
    {
        type            patch;
        faces
        (
            (10 11 19 18)
        );
    }
    outlet
    {
        type            patch;
        faces
        (
            (6 7 15 14)
            (5 6 14 13)
            (4 5 13 12)
            (14 15 23 22)
            (13 14 22 21)
            (12 13 21 20)
        );
    }
    walls
    {
        type            wall;
        faces
        (
            (0 7 15 8)
            (8 15 23 16)
            (3 4 12 11)
            (11 12 20 19)
            (8 9 17 16)
            (1 2 10 9)
            (9 10 18 17)
            (2 3 11 10)

            (0 1 6 7)
            (1 2 5 6)
            (2 3 4 5)
            (16 17 22 23)
            (17 18 21 22)
            (18 19 20 21)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //)))))
